{"ast":null,"code":"var _jsxFileName = \"/Users/faridaeloraby/alone/client/src/components/auth/Login.js\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport './style_copy.css';\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      errors: {}\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n    };\n\n    this.handleReg = e => {\n      this.props.history.push(\"/register\");\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Welcome to Karate Login\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" Email: \"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      value: this.state.email,\n      error: errors.email,\n      id: \"email\",\n      type: \"email\",\n      className: classnames(\"\", {\n        invalid: errors.email || errors.emailnotfound\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, errors.email, errors.emailnotfound), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \" Password:  \"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      value: this.state.password,\n      error: errors.password,\n      id: \"password\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.password || errors.passwordincorrect\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, errors.password, errors.passwordincorrect), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Login\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Don't have an account?\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleReg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Register\"))));\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(Login);","map":{"version":3,"sources":["/Users/faridaeloraby/alone/client/src/components/auth/Login.js"],"names":["React","Component","PropTypes","withRouter","connect","loginUser","classnames","Login","state","name","email","errors","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","userData","password","props","handleReg","history","push","componentDidMount","auth","isAuthenticated","componentWillReceiveProps","nextProps","render","invalid","emailnotfound","passwordincorrect","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\"\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\nimport './style_copy.css'\n\n\nclass Login extends Component{\n\ncomponentDidMount() {\n  // If logged in and user navigates to Login page, should redirect them to dashboard\n  if (this.props.auth.isAuthenticated) {\n    this.props.history.push(\"/dashboard\");\n  }\n}\n\n    state={\n        name: \"\",\n        email: \"\",\n        errors:{}\n    };\n\n    componentWillReceiveProps(nextProps) {\n      if (nextProps.auth.isAuthenticated) {\n        this.props.history.push(\"/dashboard\"); // push user to dashboard when they login\n      }\n  if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\nhandleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n}\nhandleSubmit = (e) => {\n    e.preventDefault();\n    const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.loginUser(userData); \n      // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n    };\n    handleReg = (e) => {\n      this.props.history.push(\"/register\");\n    }\nrender(){\n    const { errors } = this.state;\n    return (\n      <h3>\n        <div className=\"login-page\">\n            <h4>\n             Welcome to Karate Login\n            </h4>\n              <form onSubmit={this.handleSubmit}>\n              \n                <label htmlFor=\"email\"> Email: </label>\n                <input\n                  onChange={this.handleChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />  \n                  <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n\n                  <label htmlFor=\"password\"> Password:  </label>\n                <input\n                  onChange={this.handleChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                 <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n                <br />\n                <button type=\"submit\">Login</button>\n                </form>\n                <p>\n                Don't have an account?\n                <br />\n                <button onClick={this.handleReg}>Register</button>\n              </p>\n\n        </div>\n        </h3>\n    )\n}\n}\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { loginUser }\n)(Login);\n"]},"metadata":{},"sourceType":"module"}