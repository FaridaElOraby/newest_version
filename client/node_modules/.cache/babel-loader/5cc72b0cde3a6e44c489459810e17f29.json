{"ast":null,"code":"var _jsxFileName = \"/Users/faridaeloraby/alone/client/src/components/auth/Register.js\";\nimport React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        password2: this.state.password2\n      };\n      this.props.registerUser(newUser, this.props.history);\n    };\n\n    this.handleLog = e => {\n      this.props.history.push(\"/login\");\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"register-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Register\"), \" below\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Name: \"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      value: this.state.name,\n      error: errors.name,\n      id: \"name\",\n      type: \"text\",\n      className: classnames(\"\", {\n        invalid: errors.name\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, errors.name)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Email: \"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      value: this.state.email,\n      error: errors.email,\n      id: \"email\",\n      type: \"email\",\n      className: classnames(\"\", {\n        invalid: errors.email\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, errors.email)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Password: \"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      value: this.state.password,\n      error: errors.password,\n      id: \"password\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.password\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, errors.password)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Confirm Password: \"), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      value: this.state.password2,\n      error: errors.password2,\n      id: \"password2\",\n      type: \"password\",\n      className: classnames(\"\", {\n        invalid: errors.password2\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"red-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, errors.password2)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Sign up\")))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Already have an account?\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleLog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerUser\n})(withRouter(Register));","map":{"version":3,"sources":["/Users/faridaeloraby/alone/client/src/components/auth/Register.js"],"names":["React","Component","PropTypes","withRouter","connect","registerUser","classnames","Register","state","name","email","password","password2","errors","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","newUser","props","history","handleLog","push","componentDidMount","auth","isAuthenticated","componentWillReceiveProps","nextProps","render","invalid","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport {withRouter} from \"react-router-dom\"\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\n\nclass Register extends Component{\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n    state={\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        password2: \"\",\n        errors:{}\n    };\n\n    componentWillReceiveProps(nextProps) {\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n\n\nhandleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n}\nhandleSubmit = (e) => {\n    e.preventDefault();\nconst newUser = {\n    name: this.state.name,\n    email: this.state.email,\n    password: this.state.password,\n    password2: this.state.password2\n  }\nthis.props.registerUser(newUser, this.props.history); \n  };\n\n  handleLog = (e) => {\n    this.props.history.push(\"/login\");\n  }\n\nrender(){\n    const { errors } = this.state;\n    return (\n      <h3>\n        <div className=\"register-page\">\n            <h4>\n             <b>Register</b> below\n            </h4>\n           \n              <form onSubmit={this.handleSubmit}>\n              <div>\n              <label htmlFor=\"name\">Name: </label>\n                <input\n                  onChange={this.handleChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n               <span className=\"red-text\">{errors.name}</span>\n</div>\n<div>\n                <label htmlFor=\"email\">Email: </label>\n                <input\n                  onChange={this.handleChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                /> \n                <span className=\"red-text\">{errors.email}</span> \n</div>\n<div>\n                  <label htmlFor=\"password\">Password: </label>\n                <input\n                  onChange={this.handleChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                                <span className=\"red-text\">{errors.password}</span>\n                                </div>\n\n                                <div>\n                <label htmlFor=\"password2\">Confirm Password: </label>\n                <input\n                  onChange={this.handleChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n              <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div>\n                <button type=\"submit\">Sign up</button>\n                </div>\n                </form>\n               \n\n        </div>\n\n        <h2>\n                Already have an account?\n                <br />\n                <button onClick={this.handleLog}>Login</button>\n              </h2>\n              </h3>\n     \n    )\n}\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { registerUser }\n)(withRouter(Register));"]},"metadata":{},"sourceType":"module"}