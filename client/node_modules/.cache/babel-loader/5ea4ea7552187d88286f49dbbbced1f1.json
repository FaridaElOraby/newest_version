{"ast":null,"code":"var _jsxFileName = \"/Users/faridaeloraby/alone/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport Ninja from './Ninja';\nimport Old from './Old';\nimport AddNinja from './AddNinja';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\"; //import './css/nivo-slider-theme.css'\n\nimport './css/style.css'; // Check for token to keep user logged in\n\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token); // Decode token and get user info and exp\n\n  const decoded = jwt_decode(token); // Set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser()); // Redirect to login\n\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/register\",\n      component: Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(PrivateRoute, {\n      exact: true,\n      path: \"/dashboard\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/faridaeloraby/alone/client/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Provider","store","jwt_decode","setAuthToken","setCurrentUser","logoutUser","Ninja","Old","AddNinja","Register","Login","PrivateRoute","Dashboard","localStorage","jwtToken","token","decoded","dispatch","currentTime","Date","now","exp","window","location","href","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,uBAA3C;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AAA4C,OAAOC,YAAP,MAAyB,yCAAzB;AAC5C,OAAOC,SAAP,MAAsB,kCAAtB,C,CAEA;;AACA,OAAO,iBAAP,C,CAEA;;AACA,IAAIC,YAAY,CAACC,QAAjB,EAA2B;AACzB;AACA,QAAMC,KAAK,GAAGF,YAAY,CAACC,QAA3B;AACAX,EAAAA,YAAY,CAACY,KAAD,CAAZ,CAHyB,CAIzB;;AACA,QAAMC,OAAO,GAAGd,UAAU,CAACa,KAAD,CAA1B,CALyB,CAMzB;;AACAd,EAAAA,KAAK,CAACgB,QAAN,CAAeb,cAAc,CAACY,OAAD,CAA7B,EAPyB,CAQ3B;;AACE,QAAME,WAAW,GAAGC,IAAI,CAACC,GAAL,KAAa,IAAjC,CATyB,CASc;;AACvC,MAAIJ,OAAO,CAACK,GAAR,GAAcH,WAAlB,EAA+B;AAC7B;AACAjB,IAAAA,KAAK,CAACgB,QAAN,CAAeZ,UAAU,EAAzB,EAF6B,CAG7B;;AACAiB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACD;AACF;;AAED,MAAMC,GAAN,SAAkB9B,SAAlB,CAA4B;AAE1B+B,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEzB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEQ,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,YAAD;AAAc,MAAA,KAAK,MAAnB;AAAoB,MAAA,IAAI,EAAC,YAAzB;AAAsC,MAAA,SAAS,EAAEE,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHJ,CADA,CADA,CADF;AAcD;;AAjByB;;AAoB5B,eAAea,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport Ninja from './Ninja';\nimport Old from './Old'; \nimport AddNinja from './AddNinja';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';import PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\n\n//import './css/nivo-slider-theme.css'\nimport './css/style.css'\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n// Check for expired token\n  const currentTime = Date.now() / 1000; // to get in milliseconds\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser());\n    // Redirect to login\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Provider store={store}>\n      <Router>\n      <div className=\"App\">\n      <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            </Switch>\n        </div>\n        </Router>\n        </Provider>\n\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}